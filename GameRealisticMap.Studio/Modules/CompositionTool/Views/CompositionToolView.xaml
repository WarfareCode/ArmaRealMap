<UserControl x:Class="GameRealisticMap.Studio.Modules.CompositionTool.Views.CompositionToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GameRealisticMap.Studio.Modules.CompositionTool.Views"
             xmlns:local2="clr-namespace:GameRealisticMap.Studio.Modules.AssetConfigEditor.Views"
             xmlns:c="clr-namespace:GameRealisticMap.Studio.Modules.CompositionTool.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="485">
    <UserControl.Resources>
        <local:MetersToPixelsConverter x:Key="MetersToPixelsConverter" />
        <local:MetersToPixelsConverter x:Key="MetersToPixelsConverterX2" Coef="2" />
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid c:CompositionDragDrop.Importer="{Binding Importer}">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Border ClipToBounds="True">
            <local:ZoomBorder Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="LightGray">
                <Grid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" ClipToBounds="False"  VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="BaseLayer">
                    </Canvas>
                    <ItemsControl ItemsSource="{Binding Composition.Items}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewVisualPath}" Fill="Gray" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl ItemsSource="{Binding Composition.Items}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewPath}" Fill="Black" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Line X1="0" X2="{x:Static local:CanvasGrid.Size}" Y1="{x:Static local:CanvasGrid.HalfSize}" Y2="{x:Static local:CanvasGrid.HalfSize}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                        <Line X1="{x:Static local:CanvasGrid.HalfSize}" X2="{x:Static local:CanvasGrid.HalfSize}" Y1="0" Y2="{x:Static local:CanvasGrid.Size}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                    </Canvas>
                    <Ellipse 
                        Width="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="Green" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <Ellipse 
                        Width="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}"
                        StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" />
                    <Rectangle 
                        Width="{Binding Rectangle.Width, Converter={StaticResource MetersToPixelsConverter}}" 
                        Height="{Binding Rectangle.Depth, Converter={StaticResource MetersToPixelsConverter}}"
                        Visibility="{Binding HasRectangle, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" ClipToBounds="False" />
                </Grid>
            </local:ZoomBorder>
        </Border>
        <DataGrid Grid.Row="2" ItemsSource="{Binding Composition.Items}" AutoGenerateColumns="false" local2:Behaviors.UndoRedoManager="{Binding UndoRedoManager}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Model" Binding="{Binding Model.Name}" IsReadOnly="True" Width="120" />
                <DataGridTextColumn Header="X" Binding="{Binding X}" />
                <DataGridTextColumn Header="Y" Binding="{Binding Y}" />
                <DataGridTextColumn Header="Z" Binding="{Binding Z}" />
                <DataGridTextColumn Header="Heading" Binding="{Binding Yaw}" />
                <DataGridTextColumn Header="Pitch" Binding="{Binding Pitch}" />
                <DataGridTextColumn Header="Roll" Binding="{Binding Roll}" />
                <DataGridTextColumn Header="Scale" Binding="{Binding Scale}" />
                <DataGridTemplateColumn Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button CommandParameter="{Binding}" Command="{Binding DataContext.RemoveItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ToolTip="Remove item">❌</Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Button Command="{Binding Importer.AddSingle}">Add an object</Button>
        </StackPanel>
    </Grid>
</UserControl>
