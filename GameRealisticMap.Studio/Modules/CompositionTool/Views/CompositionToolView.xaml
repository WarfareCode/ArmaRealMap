<UserControl x:Class="GameRealisticMap.Studio.Modules.CompositionTool.Views.CompositionToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GameRealisticMap.Studio.Modules.CompositionTool.Views"
             xmlns:local2="clr-namespace:GameRealisticMap.Studio.Modules.AssetConfigEditor.Views"
             xmlns:c="clr-namespace:GameRealisticMap.Studio.Modules.CompositionTool.Behaviors"
             xmlns:r="clr-namespace:GameRealisticMap.Studio"
             xmlns:cal="http://www.caliburnproject.org"
              xmlns:b="clr-namespace:GameRealisticMap.Studio.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="485">
    <UserControl.Resources>
        <local:MetersToPixelsConverter x:Key="MetersToPixelsConverter" />
        <local:MetersToPixelsConverter x:Key="MetersToPixelsConverterX2" Coef="2" />
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid c:CompositionDragDrop.Importer="{Binding Importer}">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <TabControl>
            <TabItem>
                <TabItem.Header>
                    <Run Text="{x:Static r:Labels.CompositionTopView}" />
                </TabItem.Header>
                <Border ClipToBounds="True">
                    <local:ZoomBorder Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="LightGray">
                        <Grid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" ClipToBounds="False"  VerticalAlignment="Center" HorizontalAlignment="Center">
                            <local:CanvasWithGrid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </local:CanvasWithGrid>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewVisualAxisY}" Fill="Gray" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewGeoAxisY}" Fill="Black" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Line X1="0" X2="{x:Static local:CanvasGrid.Size}" Y1="{x:Static local:CanvasGrid.HalfSize}" Y2="{x:Static local:CanvasGrid.HalfSize}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                                <Line X1="{x:Static local:CanvasGrid.HalfSize}" X2="{x:Static local:CanvasGrid.HalfSize}" Y1="0" Y2="{x:Static local:CanvasGrid.Size}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                            </Canvas>
                            <Ellipse 
                        Width="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="Green" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Ellipse 
                        Width="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}"
                        StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" />
                            <Rectangle 
                        Width="{Binding Rectangle.Width, Converter={StaticResource MetersToPixelsConverter}}" 
                        Height="{Binding Rectangle.Depth, Converter={StaticResource MetersToPixelsConverter}}"
                        Visibility="{Binding HasRectangle, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" ClipToBounds="False" />
                        </Grid>
                    </local:ZoomBorder>
                </Border>
            </TabItem>



            <TabItem>
                <TabItem.Header>
                    <Run Text="{x:Static r:Labels.CompositionFrontView}" />
                    
                </TabItem.Header>
                <Border ClipToBounds="True">
                    <local:ZoomBorder Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="LightGray">
                        <Grid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" ClipToBounds="False"  VerticalAlignment="Center" HorizontalAlignment="Center">
                            <local:CanvasWithGrid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </local:CanvasWithGrid>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewVisualAxisZ}" Fill="Gray" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewGeoAxisZ}" Fill="Black" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Line X1="0" X2="{x:Static local:CanvasGrid.Size}" Y1="{x:Static local:CanvasGrid.HalfSize}" Y2="{x:Static local:CanvasGrid.HalfSize}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                                <Line X1="{x:Static local:CanvasGrid.HalfSize}" X2="{x:Static local:CanvasGrid.HalfSize}" Y1="0" Y2="{x:Static local:CanvasGrid.Size}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                            </Canvas>
                            <Rectangle 
                        Width="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                       Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="1" Stroke="#8000FF00" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle 
                        Width="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}"
                        StrokeThickness="1" Stroke="#800000FF" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle 
                        Width="{Binding Rectangle.Width, Converter={StaticResource MetersToPixelsConverter}}" 
                        Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRectangle, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="#800000FF" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="False" />

                        </Grid>
                    </local:ZoomBorder>
                </Border>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <Run Text="{x:Static r:Labels.CompositionSideView}" />
                    
                </TabItem.Header>
                <Border ClipToBounds="True">
                    <local:ZoomBorder Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="LightGray">
                        <Grid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" ClipToBounds="False"  VerticalAlignment="Center" HorizontalAlignment="Center">
                            <local:CanvasWithGrid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </local:CanvasWithGrid>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewVisualAxisX}" Fill="Gray" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Path Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Data="{Binding PreviewGeoAxisX}" Fill="Black" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Line X1="0" X2="{x:Static local:CanvasGrid.Size}" Y1="{x:Static local:CanvasGrid.HalfSize}" Y2="{x:Static local:CanvasGrid.HalfSize}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                                <Line X1="{x:Static local:CanvasGrid.HalfSize}" X2="{x:Static local:CanvasGrid.HalfSize}" Y1="0" Y2="{x:Static local:CanvasGrid.Size}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                            </Canvas>
                            <Rectangle 
                        Width="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                       Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="1" Stroke="#8000FF00" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle 
                        Width="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}" 
                        Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}"
                        StrokeThickness="1" Stroke="#800000FF" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Rectangle 
                        Width="{Binding Rectangle.Depth, Converter={StaticResource MetersToPixelsConverter}}" 
                        Height="{x:Static local:CanvasGrid.Size}"
                        Visibility="{Binding HasRectangle, Converter={StaticResource BoolToVisibilityConverter}}" 
                        StrokeThickness="2" Stroke="#800000FF" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="False" />

                        </Grid>
                    </local:ZoomBorder>
                </Border>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Run Text="Aerial View" />
                </TabItem.Header>
                <Border ClipToBounds="True">
                    <local:ZoomBorder Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="LightGray">
                        <Grid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" ClipToBounds="False"  VerticalAlignment="Center" HorizontalAlignment="Center">
                            <local:CanvasWithGrid Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </local:CanvasWithGrid>


                            <ItemsControl ItemsSource="{Binding Composition.Items}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Canvas.RenderTransform>
                                                <TransformGroup>
                                                    <MatrixTransform Matrix="20,0,0,-20,600,600" />
                                                </TransformGroup>
                                            </Canvas.RenderTransform>
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding AerialImage}" Width="{Binding AerialWidth}" Height="{Binding AerialHeight}">
                                            <Image.RenderTransform>
                                                <MatrixTransform Matrix="{Binding AerialMatrix}" />
                                            </Image.RenderTransform>
                                        </Image>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>



                            <Canvas Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Line X1="0" X2="{x:Static local:CanvasGrid.Size}" Y1="{x:Static local:CanvasGrid.HalfSize}" Y2="{x:Static local:CanvasGrid.HalfSize}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                                <Line X1="{x:Static local:CanvasGrid.HalfSize}" X2="{x:Static local:CanvasGrid.HalfSize}" Y1="0" Y2="{x:Static local:CanvasGrid.Size}"  Width="{x:Static local:CanvasGrid.Size}" Height="{x:Static local:CanvasGrid.Size}" Stroke="Red" StrokeThickness="1" />
                            </Canvas>
                            <Ellipse 
            Width="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}" 
            Height="{Binding Radius.FitRadius, Converter={StaticResource MetersToPixelsConverterX2}}"
            Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}" 
            StrokeThickness="2" Stroke="Green" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <Ellipse 
            Width="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}" 
            Height="{Binding Radius.Radius, Converter={StaticResource MetersToPixelsConverterX2}}"
            Visibility="{Binding HasRadius, Converter={StaticResource BoolToVisibilityConverter}}"
            StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" />
                            <Rectangle 
            Width="{Binding Rectangle.Width, Converter={StaticResource MetersToPixelsConverter}}" 
            Height="{Binding Rectangle.Depth, Converter={StaticResource MetersToPixelsConverter}}"
            Visibility="{Binding HasRectangle, Converter={StaticResource BoolToVisibilityConverter}}" 
            StrokeThickness="2" Stroke="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="#100000FF" ClipToBounds="False" />
                        </Grid>
                    </local:ZoomBorder>
                </Border>
            </TabItem>
            
        </TabControl>

        <DataGrid Grid.Row="2" ItemsSource="{Binding Composition.Items}" AutoGenerateColumns="false" local2:Behaviors.UndoRedoManager="{Binding UndoRedoManager}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static r:Labels.Model}" Binding="{Binding Model.Name}" IsReadOnly="True" Width="120" />
                <DataGridTextColumn Header="X" Binding="{Binding X}" />
                <DataGridTextColumn Header="Y" Binding="{Binding Y}" />
                <DataGridTextColumn Header="Z" Binding="{Binding Z}" />
                <DataGridTextColumn Header="{x:Static r:Labels.Heading}" Binding="{Binding Yaw}" />
                <DataGridTextColumn Header="{x:Static r:Labels.Pitch}" Binding="{Binding Pitch}" />
                <DataGridTextColumn Header="{x:Static r:Labels.Roll}" Binding="{Binding Roll}" />
                <DataGridTextColumn Header="{x:Static r:Labels.Scale}" Binding="{Binding Scale}" />
                <DataGridTemplateColumn Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button ToolTip="{x:Static r:Labels.Remove}" CommandParameter="{Binding}" Command="{Binding DataContext.RemoveItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">❌</Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <Button Padding="5 3" b:ButtonBehaviors.OpenContextOnClick="True">
                                <Run Text="{x:Static r:Labels.AddRandomization}" />
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem cal:Message.Attach="AddRandomization('ScaleUniform')"  Header="{x:Static r:Labels.RandomizationScaleUniform}" />
                                        <MenuItem cal:Message.Attach="AddRandomization('RotateY')" Header="{x:Static r:Labels.RandomizationRotateY}" />
                                        <MenuItem cal:Message.Attach="AddRandomization('TranslateRadiusXZ')" Header="{x:Static r:Labels.RandomizationTranslateRadiusXZ}" />
                                        <MenuItem cal:Message.Attach="AddRandomization('TranslateX')" Header="{x:Static r:Labels.RandomizationTranslateX}" />
                                        <MenuItem cal:Message.Attach="AddRandomization('TranslateZ')" Header="{x:Static r:Labels.RandomizationTranslateZ}" />
                                        <MenuItem cal:Message.Attach="AddRandomization('TranslateY')" Header="{x:Static r:Labels.RandomizationTranslateY}" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </StackPanel>
                        
                        <ItemsControl ItemsSource="{Binding Randomizations}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="0 5">
                                        <TextBlock Width="150">
                                            <Run Text="{Binding TypeLabel, Mode=OneTime}" />
                                        </TextBlock>
                                        <TextBlock>
                                            <Run Text="{x:Static r:Labels.RandomFrom}" />
                                        </TextBlock>
                                        <TextBox Width="40" Text="{Binding Min}" Margin="5 0" />
                                        <TextBlock>
                                            <Run Text="{x:Static r:Labels.RandomTo}" />
                                        </TextBlock>
                                        <TextBox Width="40" Text="{Binding Max}" Margin="5 0"  />

                                        <TextBlock Visibility="{Binding HasCenterPoint, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <Run Text="{x:Static r:Labels.CenterOn}" />
                                        </TextBlock>
                                        <TextBox Margin="5 0" Width="60" Text="{Binding X}" Visibility="{Binding HasCenterPoint, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBox Margin="5 0" Width="60" Text="{Binding Y}" Visibility="{Binding HasCenterPoint, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBox Margin="5 0" Width="60" Text="{Binding Z}" Visibility="{Binding HasCenterPoint, Converter={StaticResource BoolToVisibilityConverter}}" />

                                        <Button cal:Message.Attach="Remove">❌</Button>
                                        

                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Button Command="{Binding Importer.AddSingle}" Padding="5 0">
                <Run Text="{x:Static r:Labels.AddAnObject}" />
            </Button>
            <Button Padding="5 0" Margin="20 0 0 0" cal:Message.Attach="Rotate(180)">
                <Run Text="{x:Static r:Labels.Rotate180}" />
            </Button>
            <Button Padding="5 0" Margin="5 0 0 0" cal:Message.Attach="Rotate(+90)">
                <Run Text="{x:Static r:Labels.Rotate90}" />
            </Button>
            <Button Padding="5 0" Margin="5 0 0 0" cal:Message.Attach="Rotate(-90)">
                <Run Text="{x:Static r:Labels.RotateM90}" />
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
